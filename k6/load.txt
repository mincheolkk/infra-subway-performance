load.js
import http from 'k6/http';
import { check, group, sleep, fail } from 'k6';

const aveTraffic = 14;
const maxTraffic = 84;

export let options = {
    stages: [
        {duration: '30s', target: aveTraffic},
        {duration: '30s', target: maxTraffic},
        {duration: '1m', target: aveTraffic},
        {duration: '1m', target: maxTraffic},
    ],
    thresholds: {
        http_req_duration: ['p(99)<200'],
    },
};

const BASE_URL = 'https://mincheolkk-1st-1step.kro.kr';
export default function ()  {
  const params = {
    headers: {
      'Content-Type': 'application/json',
    },
  };

  const stations = http.get(`${BASE_URL}/stations`, params).json();
  check(stations, {
    http_req_duration: (obj) => obj.length > 0,
  });

  const lines = http.get(`${BASE_URL}/lines`, params).json();
  check(lines, {
    http_req_duration: (obj) => obj.length > 0,
  });
  sleep(1);
};



# 1. 개선 전 측정
  execution: local
       script: load.js
       output: -

    scenarios: (100.00%) 1 scenario, 84 max VUs, 3m30s max duration (incl. graceful stop):
             * default: Up to 84 looping VUs for 3m0s over 4 stages (gracefulRampDown: 30s, gracefulStop: 30s)


  running (3m04.5s), 00/84 VUs, 2430 complete and 0 interrupted iterations
  default ✓ [======================================] 00/84 VUs  3m0s

       ✓ http_req_duration

       checks.........................: 100.00% ✓ 4860      ✗ 0
       data_received..................: 283 MB  1.5 MB/s
       data_sent......................: 813 kB  4.4 kB/s
       http_req_blocked...............: avg=88.41µs min=2.1µs   med=4.82µs  max=16.38ms p(90)=6.59µs  p(95)=7.76µs
       http_req_connecting............: avg=7.8µs   min=0s      med=0s      max=5.02ms  p(90)=0s      p(95)=0s
     ✗ http_req_duration..............: avg=1.12s   min=23.72ms med=1.12s   max=3.91s   p(90)=2.07s   p(95)=2.22s
         { expected_response:true }...: avg=1.12s   min=23.72ms med=1.12s   max=3.91s   p(90)=2.07s   p(95)=2.22s
       http_req_failed................: 0.00%   ✓ 0         ✗ 4860
       http_req_receiving.............: avg=4.01ms  min=80.37µs med=2.77ms  max=57.07ms p(90)=8.09ms  p(95)=12.15ms
       http_req_sending...............: avg=56.37µs min=9.09µs  med=21.38µs max=17.11ms p(90)=33.94µs p(95)=52.13µs
       http_req_tls_handshaking.......: avg=69.46µs min=0s      med=0s      max=15.41ms p(90)=0s      p(95)=0s
       http_req_waiting...............: avg=1.11s   min=22ms    med=1.12s   max=3.9s    p(90)=2.07s   p(95)=2.21s
       http_reqs......................: 4860    26.339778/s
       iteration_duration.............: avg=3.24s   min=1.07s   med=3.29s   max=6.6s    p(90)=5.13s   p(95)=5.39s
       iterations.....................: 2430    13.169889/s
       vus............................: 19      min=1       max=84
       vus_max........................: 84      min=84      max=84

# 2. nginx.conf 에 gzip 설정
  execution: local
       script: load.js
       output: -

    scenarios: (100.00%) 1 scenario, 84 max VUs, 3m30s max duration (incl. graceful stop):
             * default: Up to 84 looping VUs for 3m0s over 4 stages (gracefulRampDown: 30s, gracefulStop: 30s)


  running (3m04.5s), 00/84 VUs, 2402 complete and 0 interrupted iterations
  default ✓ [======================================] 00/84 VUs  3m0s

       ✓ http_req_duration

       checks.........................: 100.00% ✓ 4804      ✗ 0
       data_received..................: 281 MB  1.5 MB/s
       data_sent......................: 804 kB  4.4 kB/s
       http_req_blocked...............: avg=104.85µs min=1.85µs  med=5.38µs  max=34.48ms p(90)=7.06µs  p(95)=8.02µs
       http_req_connecting............: avg=12.62µs  min=0s      med=0s      max=13.61ms p(90)=0s      p(95)=0s
     ✗ http_req_duration..............: avg=1.13s    min=24.29ms med=1.1s    max=4.11s   p(90)=2.14s   p(95)=2.3s
         { expected_response:true }...: avg=1.13s    min=24.29ms med=1.1s    max=4.11s   p(90)=2.14s   p(95)=2.3s
       http_req_failed................: 0.00%   ✓ 0         ✗ 4804
       http_req_receiving.............: avg=3.86ms   min=83.81µs med=2.75ms  max=57.43ms p(90)=7.5ms   p(95)=11.36ms
       http_req_sending...............: avg=47.85µs  min=10.38µs med=23.19µs max=13.16ms p(90)=39.18µs p(95)=56.28µs
       http_req_tls_handshaking.......: avg=79.91µs  min=0s      med=0s      max=17.02ms p(90)=0s      p(95)=0s
       http_req_waiting...............: avg=1.1s    min=22.28ms med=1.1s    max=4.11s   p(90)=2.13s   p(95)=2.3s
       http_reqs......................: 4804    26.040697/s
       iteration_duration.............: avg=3.28s    min=1.07s   med=3.23s   max=7.82s   p(90)=5.19s   p(95)=5.48s
       iterations.....................: 2402    13.020349/s
       vus............................: 18      min=1       max=84
       vus_max........................: 84      min=84      max=84

# 3. 2번 설정 + http2 설정
  execution: local
       script: load.js
       output: -

    scenarios: (100.00%) 1 scenario, 84 max VUs, 3m30s max duration (incl. graceful stop):
             * default: Up to 84 looping VUs for 3m0s over 4 stages (gracefulRampDown: 30s, gracefulStop: 30s)


  running (3m04.3s), 00/84 VUs, 2536 complete and 0 interrupted iterations
  default ✓ [======================================] 00/84 VUs  3m0s

       ✓ http_req_duration

       checks.........................: 100.00% ✓ 5072     ✗ 0
       data_received..................: 297 MB  1.6 MB/s
       data_sent......................: 847 kB  4.6 kB/s
       http_req_blocked...............: avg=86.71µs min=1.98µs  med=5.25µs  max=26.49ms p(90)=6.91µs  p(95)=8.05µs
       http_req_connecting............: avg=8.37µs  min=0s      med=0s      max=13.76ms p(90)=0s      p(95)=0s
     ✗ http_req_duration..............: avg=1.05s   min=23.3ms  med=1.02s   max=4.05s   p(90)=1.99s   p(95)=2.15s
         { expected_response:true }...: avg=1.05s   min=23.3ms  med=1.02s   max=4.05s   p(90)=1.99s   p(95)=2.15s
       http_req_failed................: 0.00%   ✓ 0        ✗ 5072
       http_req_receiving.............: avg=2.76ms  min=77.94µs med=2.16ms  max=39.17ms p(90)=5.01ms  p(95)=6.92ms
       http_req_sending...............: avg=43.95µs min=10.53µs med=22.87µs max=9.95ms  p(90)=36.69µs p(95)=50.66µs
       http_req_tls_handshaking.......: avg=70.16µs min=0s      med=0s      max=12.63ms p(90)=0s      p(95)=0s
       http_req_waiting...............: avg=1.04s   min=21.66ms med=1.02s   max=4.05s   p(90)=1.99s   p(95)=2.14s
       http_reqs......................: 5072    27.51368/s
       iteration_duration.............: avg=3.1s    min=1.07s   med=3.05s   max=7.32s   p(90)=4.97s   p(95)=5.22s
       iterations.....................: 2536    13.75684/s
       vus............................: 15      min=1      max=84
       vus_max........................: 84      min=84     max=84

# 4. 3번 설정 + 캐시
  execution: local
       script: load.js
       output: -

    scenarios: (100.00%) 1 scenario, 84 max VUs, 3m30s max duration (incl. graceful stop):
             * default: Up to 84 looping VUs for 3m0s over 4 stages (gracefulRampDown: 30s, gracefulStop: 30s)


  running (3m04.4s), 00/84 VUs, 2532 complete and 0 interrupted iterations
  default ✗ [======================================] 00/84 VUs  3m0s

       ✓ http_req_duration

       checks.........................: 100.00% ✓ 5064      ✗ 0
       data_received..................: 296 MB  1.6 MB/s
       data_sent......................: 846 kB  4.6 kB/s
       http_req_blocked...............: avg=88.51µs min=2.25µs   med=5.24µs max=38.74ms p(90)=6.99µs p(95)=8.01µs
       http_req_connecting............: avg=7.55µs  min=0s       med=0s     max=3.85ms  p(90)=0s     p(95)=0s
     ✗ http_req_duration..............: avg=1.05s   min=23.54ms  med=1.03s  max=4.19s   p(90)=2.03s  p(95)=2.16s
         { expected_response:true }...: avg=1.05s   min=23.54ms  med=1.03s  max=4.19s   p(90)=2.03s  p(95)=2.16s
       http_req_failed................: 0.00%   ✓ 0         ✗ 5064
       http_req_receiving.............: avg=2.84ms  min=100.45µs med=2.21ms max=34.5ms  p(90)=5.22ms p(95)=7.31ms
       http_req_sending...............: avg=48.78µs min=9.6µs    med=22.9µs max=10.44ms p(90)=37.7µs p(95)=51.58µs
       http_req_tls_handshaking.......: avg=71.75µs min=0s       med=0s     max=33.51ms p(90)=0s     p(95)=0s
       http_req_waiting...............: avg=1.05s   min=21.7ms   med=1.03s  max=4.18s   p(90)=2.02s  p(95)=2.16s
       http_reqs......................: 5064    27.469069/s
       iteration_duration.............: avg=3.11s   min=1.07s    med=3.08s  max=7.19s   p(90)=5.04s  p(95)=5.23s
       iterations.....................: 2532    13.734534/s
       vus............................: 15      min=1       max=84
       vus_max........................: 84      min=84      max=84

# 5. 4번 설정 + application.properties 에 gzip 설정
  execution: local
       script: load.js
       output: -

    scenarios: (100.00%) 1 scenario, 84 max VUs, 3m30s max duration (incl. graceful stop):
             * default: Up to 84 looping VUs for 3m0s over 4 stages (gracefulRampDown: 30s, gracefulStop: 30s)


  running (3m01.0s), 00/84 VUs, 7410 complete and 0 interrupted iterations
  default ✗ [======================================] 00/84 VUs  3m0s

       ✓ http_req_duration

       checks.........................: 100.00% ✓ 14820     ✗ 0
       data_received..................: 866 MB  4.8 MB/s
       data_sent......................: 2.4 MB  13 kB/s
       http_req_blocked...............: avg=65.55µs  min=1.55µs  med=4.31µs  max=108.19ms p(90)=6.05µs  p(95)=7.48µs
       http_req_connecting............: avg=13.75µs  min=0s      med=0s      max=49.09ms  p(90)=0s      p(95)=0s
     ✓ http_req_duration..............: avg=10.72ms  min=2.38ms  med=5.98ms  max=148.99ms p(90)=22.63ms p(95)=37.32ms
         { expected_response:true }...: avg=10.72ms  min=2.38ms  med=5.98ms  max=148.99ms p(90)=22.63ms p(95)=37.32ms
       http_req_failed................: 0.00%   ✓ 0         ✗ 14820
       http_req_receiving.............: avg=2.73ms   min=48.55µs med=1.08ms  max=114.48ms p(90)=6.16ms  p(95)=11.3ms
       http_req_sending...............: avg=226.78µs min=6.44µs  med=18.96µs max=51.11ms  p(90)=43.55µs p(95)=136.05µs
       http_req_tls_handshaking.......: avg=42.66µs  min=0s      med=0s      max=62.51ms  p(90)=0s      p(95)=0s
       http_req_waiting...............: avg=7.76ms   min=1.68ms  med=4.26ms  max=119.86ms p(90)=15.69ms p(95)=26.86ms
       http_reqs......................: 14820   81.873083/s
       iteration_duration.............: avg=1.02s    min=1s      med=1.01s   max=1.26s    p(90)=1.06s   p(95)=1.08s
       iterations.....................: 7410    40.936542/s
       vus............................: 3       min=1       max=84
       vus_max........................: 84      min=84      max=84

# 6. 5번 설정 + Thread pool 설정
  execution: local
       script: load.js
       output: -

    scenarios: (100.00%) 1 scenario, 84 max VUs, 3m30s max duration (incl. graceful stop):
             * default: Up to 84 looping VUs for 3m0s over 4 stages (gracefulRampDown: 30s, gracefulStop: 30s)


  running (3m01.0s), 00/84 VUs, 7495 complete and 0 interrupted iterations
  default ✓ [======================================] 00/84 VUs  3m0s

       ✓ http_req_duration

       checks.........................: 100.00% ✓ 14990     ✗ 0
       data_received..................: 876 MB  4.8 MB/s
       data_sent......................: 2.4 MB  14 kB/s
       http_req_blocked...............: avg=33.16µs min=1.11µs  med=4.16µs   max=34.7ms  p(90)=5.91µs  p(95)=7.22µs
       http_req_connecting............: avg=2.91µs  min=0s      med=0s       max=8.68ms  p(90)=0s      p(95)=0s
     ✓ http_req_duration..............: avg=6.08ms  min=2.38ms  med=4.44ms   max=95.23ms p(90)=10.47ms p(95)=14.35ms
         { expected_response:true }...: avg=6.08ms  min=2.38ms  med=4.44ms   max=95.23ms p(90)=10.47ms p(95)=14.35ms
       http_req_failed................: 0.00%   ✓ 0         ✗ 14990
       http_req_receiving.............: avg=1.53ms  min=54.87µs med=898.11µs max=57.23ms p(90)=3.31ms  p(95)=5.25ms
       http_req_sending...............: avg=92.97µs min=6.48µs  med=18.73µs  max=24.78ms p(90)=39.73µs p(95)=92.66µs
       http_req_tls_handshaking.......: avg=20.43µs min=0s      med=0s       max=12.15ms p(90)=0s      p(95)=0s
       http_req_waiting...............: avg=4.45ms  min=1.65ms  med=3.22ms   max=62.02ms p(90)=7.62ms  p(95)=10.28ms
       http_reqs......................: 14990   82.799804/s
       iteration_duration.............: avg=1.01s   min=1s      med=1.01s    max=1.13s   p(90)=1.02s   p(95)=1.03s
       iterations.....................: 7495    41.399902/s
       vus............................: 8       min=1       max=84
       vus_max........................: 84      min=84      max=84